version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    links:
      - zookeeper:zk
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "create-document:1:1,update-document:1:1"
    depends_on:
      - zookeeper
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    depends_on: 
      - zookeeper
      - kafka
    ports:
      - "8083:8081"
    environment: 
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  documentservice:
    build: ./document-service
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
      SPRING_KAFKA_SCHEMA_REGISTRY: http://schema-registry:8081
      STORAGE_SERVICE_HOST: storageservice
      STORAGE_SERVICE_PORT: 8082
      AES_SECRET: ${AES_SECRET}
    links:
      - kafka:kafka
      - storageservice:storageservice
      - schema-registry:schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
  storageservice:
    build: ./storage-service
    environment:
      STORAGE_PATH: '/storage'
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
      SPRING_KAFKA_SCHEMA_REGISTRY: http://schema-registry:8081
      AES_SECRET: ${AES_SECRET}
    links:
      - kafka:kafka
      - schema-registry:schema-registry
    depends_on:
      - kafka
    volumes:
      - type: bind
        source: ./file-storage/
        target: /storage
    ports:
      - "8082:8082"